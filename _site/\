<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <title>DevonPeel.me</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="/js/jquery.min.js"></script>
    <script src="/js/bootstrap.min.js"></script>
    <link href="/css/bootstrap.min.css" rel="stylesheet" type="text/css">
    <link href="/css/theme.css" rel="stylesheet" type="text/css">
    <link href="/css/syntax.css" rel="stylesheet" type="text/css">
</head>

<body>

<div class="container-fluid">
    <div class="row-fluid">
        <div class="navbar navbar-inverse navbar-fixed-top" role="navigation">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#bs-example-navbar-collapse-1">
                  <span class="sr-only">Toggle navigation</span>
                  <span class="icon-bar"></span>
                  <span class="icon-bar"></span>
                  <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/">DevonPeel.me</a>
              </div>
              <div class="collapse navbar-collapse" id="bs-example-navbar-collapse-1">
                <ul class="nav navbar-nav">
                    <li class="active"><a href="/">Home</a></li>
                    <li class="active visible-xs-block"><a href="/links.html">Links</a></li>
                    <li class="active"><a href="/archive.html">Archive</a></li>
                    <li class="active"><a href="/Resume/index.html">About</a></li>
<!--                    <li class="active"><a href="/feed.xml">RSS</a></li>-->
                    
                      <li class="active"><a href="https://github.com/dp3">Github</a></li>
                    
                </ul>
              </div>
        </div>
    </div>
</div>


<div class="container container-left">
    <div class="row">
        <div class="col-md-3 hidden-xs">
            <div class="sidebar well">
 Personal  Website  for  Devon  Peel. Christ follower, Techie, Kansas State and KC Royals Fan
</div>

<div class="sidebar well">
    <h1>Recent Posts</h1>
    <ul>
        
          <li><a href="/2017/11/addition-ansible-windows-facts">Additional Ansible Windows Facts</a></li>
        
          <li><a href="/2017/02/SMTPtoSMSrelay">SMTP to SMS relay</a></li>
        
          <li><a href="/2017/01/Python-WSGI">Python WSGI</a></li>
        
          <li><a href="/2016/12/Google-Analytics">Google Analytics</a></li>
        
          <li><a href="/2016/05/ChoreApp">Chore App</a></li>
        
    </ul>
</div>

<div class="sidebar well">
<h1>Reading List</h1>
<ul>
  <li><a href="http://www.cyberciti.biz">nixCraft</a></li>
  <li><a href="https://www.thingiverse.com">Thingiverse</a></li>
  <li><a href="http://www.engadget.com">Engadget</a></li>
</ul>

</div>

        </div>
        <div class="col-md-9">
          <div class="article">
            <div class="well">
                <h1><a href="/%5C">Nov 14, 2017 - Additional Ansible Windows Facts</a></h1>
            
            <div class="post-content">
            Ansible is a great tool to manage anyhost Linux or Windows. However it is missing some key tools and features. Here is a playbook and instructions to gather all installed programs on a Windows host.

Start with creating a new role, I named mine facts.

Create the ```facts\tasks\main.yml``` file and add the following

```
---
- name: create Scripts dir on remote host
  win_file:
    path: C:\Scripts
    state: directory

- name: copy custom facts file
  win_copy:
    src: getFacts.ps1
    dest: C:\Scripts\

- name: gather extra facts
  setup:
    fact_path: C:\Scripts

- name: Set intermediate fact
  set_fact:
    vars_hack: ""

- name: set program facts
  set_fact:
    one_fact: ansible_getFacts
    var_hack:  ""

#dont delete the entire dir, delete the file to update it.
- name: delete json file
  file:
    path: "/.json"
    state: absent
  failed_when: false
  delegate_to: localhost

- name: Dump all vars for dedugging
  action: template src=templates/dumpall.j2 dest="/.json"
  delegate_to: localhost

- name: run app.py to clean sensitive data from the json file
  script: app.py
  delegate_to: localhost
  ignore_errors: true
```

Now create the ```facts/files/getFacts.ps1``` file and add the follwoing below. This file will be copied to each Windows host and run return a dictionary of all installed programs.
```
#sourced from https://hindenes.com/trondsworking/2016/11/05/using-ansible-as-a-software-inventory-db-for-your-windows-nodes/
$packages = Get-WmiObject -Class Win32_Product
$returnpackages = @{}
foreach ($package in $packages)
{
   $subpackagedictionary = @{"Name" = $Package.Name; "Version" = $Package.Version; "Caption" = $Package.Caption;}
   $returnpackages.Add($Package.Name, $subpackagedictionary)
}
#Write-Host $returnpackages."Google Chrome".Name
#Write-Host $returnpackages."Google Chrome".Version
$returnpackages
```

For debugging purposes you may want to create JSON files from the returned dictionary. To do so create a ```facts/templates/dumpall.j2``` and add the following.

  {{ vars_hack | to_json }}


Create the ```facts\files\app.py``` and add the following below. This files erases passwords dumped in the the json files.
```
#!/usr/bin/env python
# orginal found at https://hindenes.com/trondsworking/2016/11/05/using-ansible-as-a-software-inventory-db-for-your-windows-nodes/

import os
import rethinkdb
import json
import rethinkdb as r

from os import listdir
from os.path import isfile, join

import sys
reload(sys)
sys.setdefaultencoding('utf-8')

tempfolder = '../roles/facts/files/data/json/'

if not os.path.isdir(tempfolder):
  os.makedirs(tempfolder)

onlyfiles = [f for f in listdir(tempfolder) if isfile(join(tempfolder, f))]

for file in onlyfiles:
  host_name = str(file).replace('.json','')  ##I am using host ips, to use hostnames use str(file).split(".")[3]
  with open(os.path.join(tempfolder, file),'r+') as data_file:
      data = json.load(data_file)
      data['ansible_password'] = ''
      data['ansible_password_ad'] = ''
      data_file.close()
  with open(tempfolder+'/'+file, 'w+') as outfile:
    json.dump(data, outfile, sort_keys=True, indent=2, separators=(',', ': '))
  outfile.close()
```

Create one last file the vars file for the role. Create ```vars/main.yml``` and add the following.

```
json_files: '../roles/facts/files/data/json/'
host_program_csv: '../roles/facts/files/data/programs'
```

Now install the redis service.
For Centos 7
```
yum install redis
systemctl enable redis
systemctl start redis
```

Generate a hash for redis
``` 
echo "redis-password-string" | sha256sum 
```

Edit the redis config file in ```/etc/redis.conf```and find the line *requirepass* and insert the generated hash

Edit your base ansible.cfg usualy in the first directory of your ansible setup and add the line

```
fact_caching_connection = <redis-ip>:6379:0:<redis-hash>
```

            </div>
            
            </div>
          </div>
          <div class="pagination">
              
              
</div>

        </div>
    </div>
</div>



<div class="container-fluid">
    <div class="row-fluid">
        <div class="span12 footer navbar-inverse navbar-fixed-bottom">
            <p class="copyright">&copy;  2017 DevonPeel.me</a>
        </div>
    </div>
</div>






<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>
<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
<script>
(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','//www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-55797517-1', 'auto');
ga('send', 'pageview');

</script>

</body>
</html>

